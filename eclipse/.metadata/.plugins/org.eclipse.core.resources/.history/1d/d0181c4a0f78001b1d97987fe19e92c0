package fr.galaglow.modpvpfaction.init;

import java.util.List;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;

public class PatatoBag extends Item{
	
	static int MAX_AMMOUNT = 300;
	
	public PatatoBag(EntityPlayer p, ItemStack PotatoBag) {
		this.maxStackSize = 1;
		
		if (p.inventory.hasItem(Items.potato)) {
			
			addPotatoes(PotatoBag, getNumberOfPotatoes(PotatoBag));
			
		}
		
	}
	
	public static boolean addPotatoes(ItemStack PotatoBag, int increment) {
		
		initTagCompound(PotatoBag);
		int numberOfPotateos = getNumberOfPotatoes(PotatoBag);
		if (numberOfPotateos >= MAX_AMMOUNT)
			return false;
		
		PotatoBag.getTagCompound().setInteger("potatoAmmount", numberOfPotateos + increment);
		return true;
	}

	private static int getNumberOfPotatoes(ItemStack PotatoBag) {
		
		initTagCompound(PotatoBag);
		return PotatoBag.getTagCompound().getInteger("potatoAmmount");
	}
	
	public static boolean removePotateos(ItemStack PotatoBag, int decrement) {
		
		initTagCompound(PotatoBag);
		int numberOfPotateos = getNumberOfPotatoes(PotatoBag);
		
		if (numberOfPotateos < decrement)
			return false;
		
		PotatoBag.getTagCompound().setInteger("potatoAmmount", numberOfPotateos - decrement);
		return true;
	}

	private static void initTagCompound(ItemStack PotatoBag) {
		
		if (!PotatoBag.hasTagCompound()) {
			
			NBTTagCompound comp = new NBTTagCompound();
			comp.setInteger("potatoAmmount", 0);
			PotatoBag.setTagCompound(comp);
			
		}
		
		if (!PotatoBag.getTagCompound().hasKey("potatoAmmount")) {
			
			NBTTagCompound comp = PotatoBag.getTagCompound();
			comp.setInteger("potatoAmmount", 0);
			PotatoBag.setTagCompound(comp);
			
		}
		
	}
	
	@Override
	public void addInformation(ItemStack stack, EntityPlayer player, List list, boolean b) {
		
		list.add("ยง4" + getNumberOfPotatoes(stack) + "ยงc patates dans le sac !");
		super.addInformation(stack, player, list, b);
		
	}

}
